apply plugin: 'maven-publish'
apply plugin: 'signing'


// Define global variables
ext {
    pomName = 'OneSignal'
    pomArtifactId = 'OneSignal'
    pomPackaging = 'aar'
    versionName = '3.15.5-OS'
    groupId = 'com.onesignal'
    pomDescription = 'OneSignal Android SDK'
    pomUrl = 'https://github.com/one-signal/OneSignal-Android-SDK'
    pomScmUrl = 'https://github.com/one-signal/OneSignal-Android-SDK'
    pomScmConnection = 'scm:git:https://github.com/one-signal/OneSignal-Android-SDK'
    pomScmDevConnection = 'scm:git:https://github.com/one-signal/OneSignal-Android-SDK'
    pomLicenseName = 'MIT License'
    pomLicenseUrl = 'https://raw.githubusercontent.com/one-signal/OneSignal-Android-SDK/master/LICENSE'
    pomLicenseDist = 'repo'
    pomDeveloperId = 'OneSignal'
    pomDeveloperName = 'Josh Kasten'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
    releaseRepositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
}

// Check if it's a release build
def isReleaseBuild() {
    return !versionName.contains("SNAPSHOT")
}

// Define repository username and password functions
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

// Configure publishing
publishing {
    publications {
        maven(MavenPublication) {
            //from components.getByName('release')

            groupId = 'com.github.outsystem'
            artifactId = 'onesignal-android-sdk'
            version = '3.15.6-OS4'

            // Configure POM
            pom {
                name = pomName
                packaging = pomPackaging
                description = pomDescription
                url = pomUrl

                // SCM information
                scm {
                    url = pomScmUrl
                    connection = pomScmConnection
                    developerConnection = pomScmDevConnection
                }

                // License information
                licenses {
                    license {
                        name = pomLicenseName
                        url = pomLicenseUrl
                        distribution = pomLicenseDist
                    }
                }

                // Developer information
                developers {
                    developer {
                        id = pomDeveloperId
                        name = pomDeveloperName
                    }
                }
            }
        }
    }

    // Configure repositories
    repositories {
        maven {
            url = isReleaseBuild() ? releaseRepositoryUrl : snapshotRepositoryUrl
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
}

// Configure signing
signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("publish") }
    sign publishing.publications
}
